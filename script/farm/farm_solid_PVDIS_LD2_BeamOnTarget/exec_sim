#!/usr/bin/perl
# Perl module to run
############################################################
# Set defaults
@files[0]="\*";
#================= Processing Arguments ======
while($_ = @ARGV[0],/^-/){
    shift;
    last if /^$/;
    substr($_,0,1) = "";
    if($_,/^r/){
# Get the run number to process
        substr($_,0,1)="";
        @runs = split('\,',$_);
    }
    elsif($_,/^h/){
# Get the input file name
                &print_usage();
                exit;
    }
}
#
# Lopp over runs
#
die"\n Run number is not specified, will terminate\! \n Use -h for usage \n\n" if !$runs[0];

foreach (@runs) {
        $rnum=$_;
# Creat jsub for this job
        $usrnam=`whoami`;
        chop($usrnam);
        $cdir=`pwd`;
        chop($cdir);
        $outevio="out\.$rnum\.evio";
        $outroot="out\.$rnum\.root";
        $outlog="out\.$rnum\.log";
	$genroot="gen\.$rnum\.root";
        $genlund="gen\.$rnum\.lund";
        $S_script_name = "jsc$rnum";
        open(SCRIPT_FILE,">$S_script_name");
        printf SCRIPT_FILE "JOBNAME: sim$rnum \n";
        printf SCRIPT_FILE "PROJECT: solid \n";
#         printf SCRIPT_FILE "TRACK : debug \n";
        printf SCRIPT_FILE "TRACK : simulation \n";
        printf SCRIPT_FILE "MAIL: $usrnam\@jlab.org\n";
        printf SCRIPT_FILE "OS: centos7\n";
#        printf SCRIPT_FILE "OS: centos65\n";
#         printf SCRIPT_FILE "OS: linux64\n";
# 	printf SCRIPT_FILE "TIME: 720\n";
        printf SCRIPT_FILE "MEMORY: 2500 MB\n";
        printf SCRIPT_FILE "DISK_SPACE: 10 GB\n";
        printf SCRIPT_FILE "COMMAND: $cdir/do_it_all.sh\n";
        printf SCRIPT_FILE "OTHER_FILES:\n";
        printf SCRIPT_FILE "$cdir/solid.gcard\n";
       	printf SCRIPT_FILE "$cdir/SoLIDFileReduce.C\n";
#        printf SCRIPT_FILE "$cdir/input.dat\n";
#       	printf SCRIPT_FILE "$cdir/PolPdf_Linear.txt\n";
#       	printf SCRIPT_FILE "$cdir/PolQuarkDist_fine.txt\n";
#        printf SCRIPT_FILE "OUTPUT_DATA: out.evio\n";
#        printf SCRIPT_FILE "OUTPUT_TEMPLATE: $cdir/$outevio\n";
        printf SCRIPT_FILE "OUTPUT_DATA: out.root\n";
        printf SCRIPT_FILE "OUTPUT_TEMPLATE: $cdir/$outroot\n";
        printf SCRIPT_FILE "OUTPUT_DATA: out.log\n";
        printf SCRIPT_FILE "OUTPUT_TEMPLATE: $cdir/$outlog\n";
#        printf SCRIPT_FILE "OUTPUT_DATA: gen.root\n";
#        printf SCRIPT_FILE "OUTPUT_TEMPLATE: $cdir/$genroot\n";
#        printf SCRIPT_FILE "OUTPUT_DATA: gen.lund\n";
#        printf SCRIPT_FILE "OUTPUT_TEMPLATE: $cdir/$genlund\n";
        close(SCRIPT_FILE);
        $sbj=`jsub $S_script_name`;
        print "Job jsc$rnum is launched \n";
}

#
################################################
sub print_usage{
#
        print <<ALL;
exec_gsim: Creates a script to run GSIM_BAT on the farm and
                  copy results to the desired locations.
                  Only required argument is a run number.
                  Rest of arguments have their defaults.

Usage: exec_do_it_all -r[RunNumber(s)]

ALL
                return;
#
}
